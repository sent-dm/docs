{
  "openapi": "3.0.0",
  "info": {
    "title": "Sent.dm API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://sent.dm/api"
    }
  ],
  "paths": {
    "/messages": {
      "post": {
        "summary": "Post a new message and publish to a message queue",
        "operationId": "postMessage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "siteId",
                  "name",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created the message and published to queue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        },
                        "siteId": {
                          "type": "string"
                        }
                      }
                    },
                    "publishQstash": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request is malformed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "bad_request",
                    "message": "The request is malformed, either missing required fields, using wrong datatypes, or being syntactically incorrect.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#bad_request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication credentials were not provided or are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "unauthorized",
                    "message": "Authentication credentials were not provided or are invalid.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client lacks proper permission.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "forbidden",
                    "message": "You do not have the necessary permissions for the resource.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "The requested resource could not be found.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#not_found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error that prevented the server from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "internal_server_error",
                    "message": "An unexpected error has occurred that prevented the server from fulfilling the request.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#internal_server_error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscribers": {
      "post": {
        "summary": "Create a subscriber and handle their subscription status",
        "operationId": "postSubscriber",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string"
                  },
                  "siteId": {
                    "type": "string"
                  }
                },
                "required": [
                  "phoneNumber",
                  "siteId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscriber is created or already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request is malformed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "bad_request",
                    "message": "The request is malformed, either missing required fields, using wrong datatypes, or being syntactically incorrect.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#bad_request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication credentials were not provided or are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "unauthorized",
                    "message": "Authentication credentials were not provided or are invalid.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client lacks proper permission.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "forbidden",
                    "message": "You do not have the necessary permissions for the resource.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "The requested resource could not be found.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#not_found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error that prevented the server from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "internal_server_error",
                    "message": "An unexpected error has occurred that prevented the server from fulfilling the request.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#internal_server_error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/send": {
      "post": {
        "summary": "Queue a message for sending at a specified time",
        "operationId": "queueMessage",
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteId": {
                    "type": "string"
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "messageId": {
                    "type": "string"
                  },
                  "senderPhoneNumber": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                },
                "required": [
                  "siteId",
                  "recipients",
                  "messageId"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Message payload queued for processing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request is malformed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "bad_request",
                    "message": "The request is malformed, either missing required fields, using wrong datatypes, or being syntactically incorrect.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#bad_request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication credentials were not provided or are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "unauthorized",
                    "message": "Authentication credentials were not provided or are invalid.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client lacks proper permission.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "forbidden",
                    "message": "You do not have the necessary permissions for the resource.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "The requested resource could not be found.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#not_found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error that prevented the server from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "doc_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": {
                    "code": "internal_server_error",
                    "message": "An unexpected error has occurred that prevented the server from fulfilling the request.",
                    "doc_url": "https://sent.dev/docs/api-reference/errors#internal_server_error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "APIKeyAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Key"
      }
    },
    "schemas": {
      "MessagePayload": {
        "type": "object",
        "properties": {
          "siteId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "siteId",
          "name",
          "content"
        ]
      },
      "SubscriberPayload": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          }
        },
        "required": [
          "phoneNumber",
          "siteId"
        ]
      },
      "MessageResponseSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "siteId": {
                "type": "string"
              }
            }
          },
          "publishQstash": {
            "type": "boolean"
          }
        }
      },
      "SendMessagePayload": {
        "type": "object",
        "properties": {
          "siteId": {
            "type": "string"
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "messageId": {
            "type": "string"
          },
          "senderPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "sendAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "siteId",
          "recipients",
          "messageId"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "doc_url": {
                "type": "string"
              }
            }
          }
        }
      },
      "Subscriber": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique identifier for the subscriber, automatically generated and managed."
            },
            "phoneNumber": {
              "type": "string",
              "description": "The phone number of the subscriber, which must be unique across all subscribers."
            },
            "defaultChannel": {
              "$ref": "#/components/schemas/SubscriptionChannel"
            },
            "SubscriberChannels": {
              "type": "array",
              "description": "The list of all subscribed channels by the subscriber, providing details on the status and specific configurations of each.",
              "items": {
                "$ref": "#/components/schemas/SubscriberChannels"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp indicating when the subscriber was first created in the system, formatted as a date-time string."
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp indicating when the subscriber information was last updated, formatted as a date-time string."
            },
            "countryCode": {
              "type": "string",
              "description": "The country code associated with the subscriber's phone number."
            },
            "countryIso": {
              "type": "string",
              "description": "The ISO country code representing the subscriber's country of residence."
            },
            "verificationStatus": {
              "type": "string",
              "enum": ["pending", "active", "inactive"],
              "description": "The current verification status of the subscriber."
            },
            "Events": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MessageAction"
              }
            }
          }
      },
      "SubscriberResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/Subscriber"
          }
        }
      },
      "Event": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique identifier for the event, automatically generated and managed."
            },
            "name": {
              "type": "string",
              "description": "The name of the event."
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the event occurred, automatically set to the current time."
            },
            "channelType": {
              "type": "string",
              "description": "The communication channel type used during the event."
            },
            "properties": {
              "type": "object",
              "description": "Additional JSON formatted properties related to the event."
            }
          }
      },
      "SubscriptionChannel": {
          "type": "string",
          "enum": ["sms", "whatsapp", "telegram", "imessage"],
          "description": "The types of subscription channels available."
      },
      "SubscriberChannels": {
          "type": "object",
          "properties": {
            "channel": {
              "$ref": "#/components/schemas/SubscriptionChannel"
            },
            "valid": {
              "type": "string",
              "enum": ["pending", "valid", "invalid"],
              "default": "pending",
              "description": "Current status of the channel, automatically set to pending."
            }
          }
      },
      "MessageAction": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier of the message."
            },
            "title": {
              "type": "string",
              "description": "Title or subject of the message."
            },
            "content": {
              "type": "string",
              "description": "The actual content of the message."
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time when the message was sent or received."
            }
          }
      }
      
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request - The request is malformed.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "doc_url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "example": {
              "error": {
                "code": "bad_request",
                "message": "The request is malformed, either missing required fields, using wrong datatypes, or being syntactically incorrect.",
                "doc_url": "https://sent.dev/docs/api-reference/errors#bad_request"
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized - Authentication credentials were not provided or are invalid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "doc_url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "example": {
              "error": {
                "code": "unauthorized",
                "message": "Authentication credentials were not provided or are invalid.",
                "doc_url": "https://sent.dev/docs/api-reference/errors#unauthorized"
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden - The client lacks proper permission.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "doc_url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "example": {
              "error": {
                "code": "forbidden",
                "message": "You do not have the necessary permissions for the resource.",
                "doc_url": "https://sent.dev/docs/api-reference/errors#forbidden"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found - The requested resource could not be found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "doc_url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "example": {
              "error": {
                "code": "not_found",
                "message": "The requested resource could not be found.",
                "doc_url": "https://sent.dev/docs/api-reference/errors#not_found"
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error - An unexpected error that prevented the server from fulfilling the request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "doc_url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "example": {
              "error": {
                "code": "internal_server_error",
                "message": "An unexpected error has occurred that prevented the server from fulfilling the request.",
                "doc_url": "https://sent.dev/docs/api-reference/errors#internal_server_error"
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "APIKeyAuth": []
    }
  ]
}